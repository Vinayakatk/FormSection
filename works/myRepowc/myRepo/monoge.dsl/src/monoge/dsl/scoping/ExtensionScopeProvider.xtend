/*
 * generated by Xtext
 */
package monoge.dsl.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import monoge.dsl.^extension.ExtensionPackage
import org.eclipse.emf.ecore.EPackage.Registry
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.emf.ecore.EPackage
import org.eclipse.emf.examples.extlibrary.EXTLibraryPackage
import org.eclipse.xtext.tutorial.survey.survey.SurveyPackage
import org.eclipse.xtext.EcoreUtil2
import monoge.dsl.^extension.Model

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
class ExtensionScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
	
	override getScope(EObject context, EReference reference) {
		EXTLibraryPackage.eINSTANCE.eClass
		SurveyPackage.eINSTANCE.eClass
		if(reference==ExtensionPackage.eINSTANCE.model_Metamodel){
			Scopes.scopeFor(newArrayList(Registry.INSTANCE.getEPackage(EXTLibraryPackage.eNS_URI),Registry.INSTANCE.getEPackage(SurveyPackage.eNS_URI)));
		}
		else if(reference==ExtensionPackage.eINSTANCE.modifyClass_Prefix){
		var model = EcoreUtil2.getContainerOfType(context,Model) as Model
		
		Scopes.scopeFor(model.metamodel.head.EClassifiers);	
		}
	}
	
	
}
